{"ast":null,"code":"var _jsxFileName = \"/Users/kollusaimanaswi/Desktop/intel_avatars/facial-animation/src/components/AudioRecorder.js\";\nimport React, { Component } from \"react\";\nimport \"./css/AudioRecorder.css\";\nimport { bgColor, fontColor } from '../Config.js';\nimport { Transition } from \"react-transition-group\"; // import { ReactMic } from \"react-mic\";\n\nimport { transitionStyles, defaultStyle, darkFocus } from \"../Config.js\";\nlet ReactMic;\n\nclass AudioRecorder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startRecording = () => {\n      setInterval(this.setTimer, 1000);\n      this.setState({\n        record: true,\n        start: Date.now()\n      });\n    };\n\n    this.setTimer = () => {\n      var seconds = Math.floor((Date.now() - this.state.start) / 1000);\n      var minutes = Math.floor(seconds / 60);\n      var time = \"\";\n\n      if (seconds < 10) {\n        seconds = \"0\" + seconds;\n      }\n\n      if (minutes > 0) {\n        if (minutes > 9) {\n          time = minutes + \":\" + seconds;\n        } else {\n          time = \"0\" + minutes + \":\" + seconds;\n        }\n      } else {\n        time = \"00:\" + seconds;\n      }\n\n      this.setState({\n        timer: time\n      });\n    };\n\n    this.stopRecording = () => {\n      clearInterval();\n      this.setState({\n        record: false,\n        timer: \"00:00\"\n      });\n    };\n\n    this.onData = recordedBlob => {};\n\n    this.onStop = recordedBlob => {\n      console.log(\"recordedBlob is: \", recordedBlob);\n      this.props.newRecording(new File([recordedBlob.blob], \"recording.wav\", {\n        type: \"audio/wav\",\n        lastModified: Date.now()\n      }));\n    };\n\n    this.onSave = recordedBlob => {\n      this.setState({\n        downloadLinkURL: recordedBlob.blobURL\n      });\n    };\n\n    this.state = {\n      record: false,\n      downloadLinkURL: null,\n      timer: \"00:00\"\n    };\n\n    if (!ReactMic) {\n      try {\n        ReactMic = require(\"react-mic\").ReactMic;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"recorder-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"horizontal-recorder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, !this.state.record && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"record-button record\",\n      onClick: this.startRecording,\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"Record\"), this.state.record && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"record-button record\",\n      onClick: this.stopRecording,\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, \"Stop recording\")), /*#__PURE__*/React.createElement(Transition, {\n      timeout: 300,\n      in: !this.state.record && this.state.downloadLinkURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, state => /*#__PURE__*/React.createElement(\"div\", {\n      style: { ...defaultStyle,\n        ...transitionStyles[state]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"record download\",\n      href: this.state.downloadLinkURL,\n      download: \"recording.wav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, \"Download\"))), /*#__PURE__*/React.createElement(Transition, {\n      timeout: 300,\n      in: this.state.record,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, state => /*#__PURE__*/React.createElement(\"div\", {\n      style: { ...defaultStyle,\n        ...transitionStyles[state]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ReactMic, {\n      record: this.state.record,\n      className: \"sound-wave visualization\",\n      onStop: this.onStop,\n      onData: this.onData,\n      onSave: this.onSave,\n      mimeType: \"audio/wav\",\n      width: 0,\n      height: 0,\n      noiseSuppression: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"timer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, this.state.timer))));\n  }\n\n}\n\nexport default AudioRecorder;","map":{"version":3,"sources":["/Users/kollusaimanaswi/Desktop/intel_avatars/facial-animation/src/components/AudioRecorder.js"],"names":["React","Component","bgColor","fontColor","Transition","transitionStyles","defaultStyle","darkFocus","ReactMic","AudioRecorder","constructor","props","startRecording","setInterval","setTimer","setState","record","start","Date","now","seconds","Math","floor","state","minutes","time","timer","stopRecording","clearInterval","onData","recordedBlob","onStop","console","log","newRecording","File","blob","type","lastModified","onSave","downloadLinkURL","blobURL","require","err","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./css/AudioRecorder.css\";\nimport { bgColor, fontColor } from '../Config.js'\nimport { Transition } from \"react-transition-group\";\n// import { ReactMic } from \"react-mic\";\nimport {transitionStyles, defaultStyle, darkFocus } from \"../Config.js\";\n\nlet ReactMic;\nclass AudioRecorder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      record: false,\n      downloadLinkURL: null,\n      timer: \"00:00\",\n    };\n    if (!ReactMic) {\n      try {\n        ReactMic = require(\"react-mic\").ReactMic;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  startRecording = () => {\n    setInterval(this.setTimer, 1000)\n    this.setState({ record: true, start: Date.now() });\n  };\n\n  setTimer = () => {\n    var seconds = Math.floor((Date.now() - this.state.start)/1000);\n    var minutes = Math.floor(seconds/60);\n    var time = \"\";\n    if(seconds<10){\n      seconds = \"0\"+seconds\n    }\n    if(minutes > 0){\n      if(minutes>9){\n        time = minutes+\":\"+seconds\n      }\n      else{\n        time = \"0\"+minutes+\":\"+seconds\n      }\n    }\n    else{\n      time=\"00:\"+seconds;\n    }\n    this.setState({timer: time})\n  }\n\n  stopRecording = () => {\n    clearInterval();\n    this.setState({ record: false, timer: \"00:00\" });\n  };\n\n  onData = (recordedBlob) => {\n  };\n\n  onStop = (recordedBlob) => {\n    console.log(\"recordedBlob is: \", recordedBlob);\n    this.props.newRecording(\n      new File([recordedBlob.blob], \"recording.wav\", {\n        type: \"audio/wav\",\n        lastModified: Date.now(),\n      })\n    );\n  };\n\n  onSave = (recordedBlob) => {\n    this.setState({\n      downloadLinkURL: recordedBlob.blobURL,\n    });\n  };\n\n  render() {\n    return (\n      <div id=\"recorder-container\">\n        <div className=\"horizontal-recorder\">\n          {!this.state.record &&\n        <button\n          className=\"record-button record\"\n          onClick={this.startRecording}\n          type=\"button\"\n        >\n          Record\n        </button>\n  }\n{this.state.record &&\n        <button\n          className=\"record-button record\"\n          onClick={this.stopRecording}\n          type=\"button\"\n        >\n          Stop recording\n        </button>}\n        </div>\n        <Transition timeout={300} in={!this.state.record && this.state.downloadLinkURL}>\n        {(state) => (\n          <div\n            style={{\n              ...defaultStyle,\n              ...transitionStyles[state],\n            }}\n          >\n        <a\n          className=\"record download\"\n          href={this.state.downloadLinkURL}\n          download=\"recording.wav\"\n        >\n          Download\n        </a>\n        </div>\n        )}\n      </Transition>\n        <Transition timeout={300} in={this.state.record}>\n        {(state) => (\n          <div\n            style={{\n              ...defaultStyle,\n              ...transitionStyles[state],\n            }}\n          >\n        <ReactMic\n          record={this.state.record}\n          className=\"sound-wave visualization\"\n          onStop={this.onStop}\n          onData={this.onData}\n          onSave={this.onSave}\n          mimeType=\"audio/wav\"\n          width={0}\n          height={0}\n          noiseSuppression={true}\n        />\n        <div id=\"timer\">{this.state.timer}</div>\n        </div>\n        )}\n      </Transition>\n      </div>\n    );\n  }\n}\n\nexport default AudioRecorder;\n"]},"metadata":{},"sourceType":"module"}