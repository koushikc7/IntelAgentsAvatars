{"ast":null,"code":"var _jsxFileName = \"/Users/kollusaimanaswi/Desktop/intel_avatars/facial-animation/src/components/Model.js\";\nimport React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport { SkeletonUtils } from \"three/examples/jsm/utils/SkeletonUtils.js\";\nimport { darkBg, darkFocus, darkFont, lightBg, lightFont, lightFocus, visemeMap, lightLight1, lightLight2 } from \"../Config.js\";\n\nclass Model extends Component {\n  // class that displays the avatar and handles the animation\n  constructor(props) {\n    super(props);\n    this.state = {\n      animationStatus: this.props.animationStatus,\n      intensity: this.props.sliderValue,\n      theme: this.props.theme\n    };\n    this.visemes = undefined;\n    this.visemesNames = undefined;\n    this.bgColor = undefined;\n    this.fontColor = undefined;\n    this.focusColor = undefined;\n    this.hemiIntensity = undefined;\n    this.spotIntensity = undefined;\n    this.move = 0.02;\n    this.delta = 0;\n    this.modelControlActive = false;\n    this.currentFrame = 1;\n    this.lidMove = 0.08;\n    this.lidSpeed = 0.08;\n    this.lidWait = 1;\n    this.exponent = 6;\n    this.dec = 15;\n    this.obamaRatio = [0.8, 0.8];\n    this.dhi = 1.1;\n    this.dsi = 0.75;\n    this.lhi = 0.85;\n    this.lsi = 0.2;\n    this.start = this.start.bind(this);\n    this.animate = this.animate.bind(this);\n    this.onWindowResize = this.onWindowResize.bind(this);\n    this.addCube = this.addCube.bind(this);\n    this.addModel = this.addModel.bind(this);\n    this.getMouthControl = this.getModelControl.bind(this);\n    this.moveLid = this.moveLid.bind(this);\n    this.nextViseme = this.nextViseme.bind(this);\n    this.resetModel = this.resetModel.bind(this);\n    this.moveLights = this.moveLights.bind(this);\n  }\n\n  componentDidMount() {\n    // set the current theme colors\n    if (this.state.theme === \"dark\") {\n      this.bgColor = darkBg;\n      this.fontColor = darkFont;\n      this.focusColor = darkFocus;\n      this.hemiIntensity = this.dhi;\n      this.spotIntensity = this.dsi;\n    } else {\n      this.bgColor = lightBg;\n      this.fontColor = lightFont;\n      this.focusColor = lightFocus;\n      this.hemiIntensity = this.lhi;\n      this.spotIntensity = this.lsi;\n    }\n\n    const width = window.innerWidth;\n    const height = window.innerHeight; // initialize the canvas scene\n\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    this.hemiLight = new THREE.HemisphereLight(this.bgColor, this.focusColor, this.hemiIntensity);\n    this.scene.add(this.hemiLight);\n    this.spotLight = new THREE.PointLight(this.fontColor, this.spotIntensity);\n    this.spotLight.position.set(-80, 100, 10);\n    this.spotLight.castShadow = true;\n    this.scene.add(this.spotLight);\n    const sphere = new THREE.SphereBufferGeometry(0.1, 16, 8);\n    this.light1 = new THREE.PointLight(0xffffff, 0.1, 50);\n    this.light1.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({\n      color: this.fontColor\n    })));\n    this.scene.add(this.light1);\n    this.light2 = new THREE.PointLight(lightLight1, 0.1, 50);\n    this.light2.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({\n      color: this.fontColor\n    })));\n    this.scene.add(this.light2);\n    this.light3 = new THREE.PointLight(lightLight2, 0.1, 50);\n    this.light3.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({\n      color: this.fontColor\n    })));\n    this.scene.add(this.light3);\n    this.light4 = new THREE.PointLight(this.focusColor, 0.1, 50);\n    this.light4.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({\n      color: this.fontColor\n    })));\n    this.scene.add(this.light4);\n    this.light5 = new THREE.PointLight(this.fontColor, 0.1, 50);\n    this.light5.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({\n      color: this.fontColor\n    })));\n    this.scene.add(this.light5); // adds the avatar to the scene\n\n    this.addModel();\n    this.camera.position.z = 0.5;\n    this.camera.position.y = 0;\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.controls.update();\n    this.renderer.setSize(width, height);\n    window.addEventListener(\"resize\", this.onWindowResize, false);\n    this.mount.appendChild(this.renderer.domElement);\n    this.start();\n  }\n\n  componentDidUpdate(prevProps) {\n    // start/stop/pause the animation\n    if (prevProps.animationStatus !== this.props.animationStatus) {\n      this.setState({\n        animationStatus: this.props.animationStatus\n      });\n    } // receive the new list of visemes\n\n\n    if (prevProps.visemes !== this.props.visemes) {\n      this.visemes = this.props.visemes;\n      this.visemesNames = [...new Set(this.props.visemes)];\n      this.currentFrame = 1;\n      console.log(this.visemes);\n      console.log(this.visemesNames);\n    } // update the intensity of the articulation\n\n\n    if (prevProps.sliderValue !== this.props.sliderValue) {\n      this.setState({\n        intensity: this.props.sliderValue\n      });\n    } // change the theme\n\n\n    if (prevProps.theme !== this.props.theme) {\n      this.setState({\n        theme: this.props.theme\n      }, () => {\n        console.log(this.state.theme);\n\n        if (this.state.theme === \"dark\") {\n          this.bgColor = darkBg;\n          this.fontColor = darkFont;\n          this.focusColor = darkFocus;\n          this.hemiIntensity = this.dhi;\n          this.spotIntensity = this.dsi;\n          this.spotLight.position.set(-80, 100, 10);\n        } else {\n          this.bgColor = lightBg;\n          this.fontColor = lightFont;\n          this.focusColor = lightFocus;\n          this.hemiIntensity = this.lhi;\n          this.spotIntensity = this.lsi;\n          this.spotLight.position.set(-80, 100, 100);\n        }\n\n        this.hemiLight.color = new THREE.Color(this.bgColor);\n        this.hemiLight.groundColor = new THREE.Color(this.focusColor);\n        this.hemiLight.intensity = this.hemiIntensity;\n        this.spotLight.color = new THREE.Color(this.fontColor);\n        this.spotLight.intensity = this.spotIntensity;\n        this.light1.children[0].material.color = new THREE.Color(this.fontColor);\n        this.light2.children[0].material.color = new THREE.Color(this.fontColor);\n        this.light3.children[0].material.color = new THREE.Color(this.fontColor);\n        this.light4.children[0].material.color = new THREE.Color(this.fontColor);\n        this.light4.color = new THREE.Color(this.focusColor);\n        this.light5.children[0].material.color = new THREE.Color(this.fontColor);\n        this.light5.color = new THREE.Color(this.fontColor);\n        this.model.traverse(o => {\n          if (o.isMesh && (o.name === \"head\" || o.name === \"eye4\" || o.name === \"eye4001\")) {\n            if (this.state.theme === \"dark\") {\n              o.material.emissive = new THREE.Color(this.bgColor);\n              o.material.shininess = 150;\n            } else {\n              o.material.emissive = new THREE.Color(\"#000000\");\n              o.material.shininess = 70;\n            }\n          }\n        });\n      });\n    }\n  }\n\n  addCube(x, y, z) {\n    // test function for the graphics library\n    var geometry = new THREE.BoxGeometry(0.1, 0.1, 0.1);\n    geometry.translate(x, y, z);\n    var material = new THREE.MeshBasicMaterial({\n      color: \"#433F81\"\n    });\n    var cube = new THREE.Mesh(geometry, material);\n    this.scene.add(cube);\n  }\n\n  addModel() {\n    // loads the model to the page\n    var loader = new GLTFLoader();\n    loader.load(\"model/head_new_visemes_2.gltf\", gltf => {\n      // clones the model\n      this.model = SkeletonUtils.clone(gltf.scene);\n      console.log(this.model);\n      this.scene.add(this.model);\n      this.getModelControl();\n      this.model.traverse(o => {\n        // adds the material and color to the model\n        if (o.isMesh && (o.name === \"head\" || o.name === \"eye4\" || o.name === \"eye4001\")) {\n          var newMaterial;\n\n          if (this.state.theme === \"dark\") {\n            newMaterial = new THREE.MeshPhongMaterial({\n              color: 0xffffff,\n              specular: 0x111111,\n              shininess: 150\n            });\n            newMaterial.emissive = new THREE.Color(this.bgColor);\n          } else {\n            newMaterial = new THREE.MeshPhongMaterial({\n              color: 0xffffff,\n              specular: 0x111111,\n              shininess: 50\n            });\n          }\n\n          newMaterial.needsUpdate = true;\n          newMaterial.skinning = o.material.skinning;\n          newMaterial.morphTargets = o.material.morphTargets;\n          newMaterial.morphNormals = o.material.morphNormals;\n          o.material = newMaterial;\n        }\n      });\n      this.renderScene();\n      this.props.mounted(); // create logger for controllers values tracking\n\n      this.logger = {};\n      this.logger[\"phones\"] = [];\n\n      for (var visemeName of Object.keys(this.modelControlDict)) {\n        if (visemeName !== \"wink\") {\n          this.logger[visemeName] = [];\n        }\n      }\n\n      console.log(this.model);\n    }, undefined, function (error) {\n      console.error(error);\n    });\n  }\n\n  onWindowResize() {\n    this.camera.aspect = window.innerWidth / window.innerHeight;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n\n  componentWillUnmount() {\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  start() {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate);\n    }\n  }\n\n  getModelControl() {\n    // gets the controllers of the shape keys of the model\n    if (this.model) {\n      this.model.traverse(o => {\n        if (o.isMesh && o.name === \"head\") {\n          this.modelControl = o.morphTargetInfluences;\n          this.modelControlDict = o.morphTargetDictionary;\n          this.modelControlActive = true;\n        }\n      });\n    }\n  }\n\n  calculateDistance(point1, point2) {\n    return Math.sqrt(Math.pow(point1[0] - point2[0], 2) + Math.pow(point1[1] - point2[1], 2));\n  }\n\n  moveLid() {\n    // animates the blinking\n    if (this.modelControl) {\n      if (this.modelControl[this.modelControlDict[\"wink\"]] <= 0) {\n        if (this.lidWait > 400) {\n          this.lidMove = this.lidSpeed;\n          this.lidWait = 0;\n        } else {\n          this.lidMove = 0;\n        }\n\n        this.lidWait += 1;\n      } else if (this.modelControl[this.modelControlDict[\"wink\"]] > 1) {\n        this.lidMove = -this.lidMove;\n      }\n\n      this.modelControl[this.modelControlDict[\"wink\"]] += this.lidMove;\n    }\n  }\n\n  moveLights() {\n    // animates the moving lights\n    const time = Date.now() * 0.0005;\n    this.light1.position.x = Math.sin(time * 0.7) * 10;\n    this.light1.position.y = Math.cos(time * 0.5) * 20;\n    this.light1.position.z = Math.cos(time * 0.3) * 10;\n    this.light2.position.x = Math.cos(time * 0.3) * 10;\n    this.light2.position.y = Math.sin(time * 0.5) * 20;\n    this.light2.position.z = Math.sin(time * 0.7) * 10;\n    this.light3.position.x = Math.sin(time * 0.7) * 10;\n    this.light3.position.y = Math.cos(time * 0.3) * 20;\n    this.light3.position.z = Math.sin(time * 0.5) * 10;\n    this.light4.position.x = Math.cos(time * 0.3) * 10;\n    this.light4.position.y = Math.cos(time * 0.7) * 20;\n    this.light4.position.z = Math.sin(time * 0.5) * 10;\n    this.light5.position.x = Math.cos(time * 0.3) * 10;\n    this.light5.position.y = Math.sin(time * 0.7) * 20;\n    this.light5.position.z = Math.cos(time * 0.5) * 10;\n  }\n\n  nextViseme() {\n    // takes the next viseme from the list and changes the controllers\n    // decrease added value\n    if (this.currentFrame > 0 && this.visemes[this.currentFrame] === this.visemes[this.currentFrame - 1]) {\n      this.exponent -= 0.1;\n    } else this.exponent = 10; // decrease all visemes\n\n\n    for (var visemeName of Object.keys(this.modelControlDict)) {\n      if (visemeName !== \"wink\") {\n        this.modelControl[this.modelControlDict[visemeName]] -= this.state.intensity / this.dec;\n        if (this.modelControl[this.modelControlDict[visemeName]] < 0) this.modelControl[this.modelControlDict[visemeName]] = 0;\n      }\n    } // increase the current visemes\n\n\n    var mapping = visemeMap[this.visemes[this.currentFrame]];\n\n    for (var currentVisemeName of Object.keys(mapping)) {\n      // calculate the added value\n      var inc = Math.pow(this.state.intensity, this.exponent); // check if the visime is relative\n\n      if (mapping[currentVisemeName] > 1) inc /= 4; // add the value\n\n      this.modelControl[this.modelControlDict[currentVisemeName]] += this.state.intensity / this.dec;\n      this.modelControl[this.modelControlDict[currentVisemeName]] += inc; // check constraints\n\n      if (this.modelControl[this.modelControlDict[currentVisemeName]] > 1 && mapping[currentVisemeName] > 1) this.modelControl[this.modelControlDict[currentVisemeName]] = 1;\n      if (this.modelControl[this.modelControlDict[currentVisemeName]] > mapping[currentVisemeName] * this.state.intensity && !(mapping[currentVisemeName] > 1)) this.modelControl[this.modelControlDict[currentVisemeName]] = mapping[currentVisemeName] * this.state.intensity;\n    } // log the values in the shape key logger\n\n\n    for (var visemeName of Object.keys(this.modelControlDict)) {\n      if (visemeName !== \"wink\") {\n        this.logger[visemeName].push(this.modelControl[this.modelControlDict[visemeName]]);\n      }\n    }\n\n    this.logger[\"phones\"].push(this.visemes[this.currentFrame]);\n  }\n\n  resetModel() {\n    if (this.modelControl) {\n      for (var i = 0; i < this.modelControl.length; i++) {\n        if (this.modelControlDict[\"wink\"] !== i) this.modelControl[i] = 0;\n      }\n    }\n  }\n\n  async animate() {\n    // main animation loop\n    if (this.state.animationStatus === \"PLAY\" && this.modelControlActive) {\n      // get the next frame/viseme\n      this.nextViseme();\n      this.currentFrame += 1;\n      this.props.setProgress(this.currentFrame / this.visemes.length);\n\n      if (this.currentFrame >= this.visemes.length) {\n        // end of animation\n        this.currentFrame = 0;\n        this.resetModel();\n        this.props.setProgress(0);\n      }\n\n      if (this.props.audio.ended) {\n        // end of audio\n        this.props.stopAnimation(); // display the logged values\n\n        if (this.logger) {\n          var json = JSON.stringify(this.logger); // console.log(json)\n        }\n      }\n    } else if (this.state.animationStatus === \"STOP\") {\n      // animation is not playing\n      this.currentFrame = 0;\n      this.resetModel();\n      this.props.setProgress(0);\n    }\n\n    this.moveLid();\n    this.moveLights();\n    this.controls.update();\n    this.renderScene();\n    this.frameId = window.requestAnimationFrame(this.animate);\n  }\n\n  renderScene() {\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: mount => {\n        this.mount = mount;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default Model;","map":{"version":3,"sources":["/Users/kollusaimanaswi/Desktop/intel_avatars/facial-animation/src/components/Model.js"],"names":["React","Component","THREE","GLTFLoader","OrbitControls","SkeletonUtils","darkBg","darkFocus","darkFont","lightBg","lightFont","lightFocus","visemeMap","lightLight1","lightLight2","Model","constructor","props","state","animationStatus","intensity","sliderValue","theme","visemes","undefined","visemesNames","bgColor","fontColor","focusColor","hemiIntensity","spotIntensity","move","delta","modelControlActive","currentFrame","lidMove","lidSpeed","lidWait","exponent","dec","obamaRatio","dhi","dsi","lhi","lsi","start","bind","animate","onWindowResize","addCube","addModel","getMouthControl","getModelControl","moveLid","nextViseme","resetModel","moveLights","componentDidMount","width","window","innerWidth","height","innerHeight","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","antialias","alpha","hemiLight","HemisphereLight","add","spotLight","PointLight","position","set","castShadow","sphere","SphereBufferGeometry","light1","Mesh","MeshBasicMaterial","color","light2","light3","light4","light5","z","y","controls","domElement","update","setSize","addEventListener","mount","appendChild","componentDidUpdate","prevProps","setState","Set","console","log","Color","groundColor","children","material","model","traverse","o","isMesh","name","emissive","shininess","x","geometry","BoxGeometry","translate","cube","loader","load","gltf","clone","newMaterial","MeshPhongMaterial","specular","needsUpdate","skinning","morphTargets","morphNormals","renderScene","mounted","logger","visemeName","Object","keys","modelControlDict","error","aspect","updateProjectionMatrix","componentWillUnmount","removeChild","frameId","requestAnimationFrame","modelControl","morphTargetInfluences","morphTargetDictionary","calculateDistance","point1","point2","Math","sqrt","pow","time","Date","now","sin","cos","mapping","currentVisemeName","inc","push","i","length","setProgress","audio","ended","stopAnimation","json","JSON","stringify","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport { SkeletonUtils } from \"three/examples/jsm/utils/SkeletonUtils.js\";\nimport {\n  darkBg,\n  darkFocus,\n  darkFont,\n  lightBg,\n  lightFont,\n  lightFocus,\n  visemeMap,\n  lightLight1,\n  lightLight2,\n} from \"../Config.js\";\n\nclass Model extends Component {\n  // class that displays the avatar and handles the animation\n  constructor(props) {\n    super(props);\n    this.state = {\n      animationStatus: this.props.animationStatus,\n      intensity: this.props.sliderValue,\n      theme: this.props.theme,\n    };\n    this.visemes = undefined;\n    this.visemesNames = undefined;\n\n    this.bgColor = undefined;\n    this.fontColor = undefined;\n    this.focusColor = undefined;\n    this.hemiIntensity = undefined;\n    this.spotIntensity = undefined;\n\n    this.move = 0.02;\n    this.delta = 0;\n\n    this.modelControlActive = false;\n\n    this.currentFrame = 1;\n\n    this.lidMove = 0.08;\n    this.lidSpeed = 0.08;\n    this.lidWait = 1;\n\n    this.exponent = 6;\n    this.dec = 15;\n\n    this.obamaRatio = [0.8, 0.8];\n\n    this.dhi = 1.1;\n    this.dsi = 0.75;\n    this.lhi = 0.85;\n    this.lsi = 0.2;\n\n    this.start = this.start.bind(this);\n    this.animate = this.animate.bind(this);\n    this.onWindowResize = this.onWindowResize.bind(this);\n    this.addCube = this.addCube.bind(this);\n    this.addModel = this.addModel.bind(this);\n    this.getMouthControl = this.getModelControl.bind(this);\n    this.moveLid = this.moveLid.bind(this);\n    this.nextViseme = this.nextViseme.bind(this);\n    this.resetModel = this.resetModel.bind(this);\n    this.moveLights = this.moveLights.bind(this);\n  }\n\n  componentDidMount() {\n    // set the current theme colors\n    if (this.state.theme === \"dark\") {\n      this.bgColor = darkBg;\n      this.fontColor = darkFont;\n      this.focusColor = darkFocus;\n      this.hemiIntensity = this.dhi;\n      this.spotIntensity = this.dsi;\n    } else {\n      this.bgColor = lightBg;\n      this.fontColor = lightFont;\n      this.focusColor = lightFocus;\n      this.hemiIntensity = this.lhi;\n      this.spotIntensity = this.lsi;\n    }\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    // initialize the canvas scene\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n\n    this.hemiLight = new THREE.HemisphereLight(\n      this.bgColor,\n      this.focusColor,\n      this.hemiIntensity\n    );\n    this.scene.add(this.hemiLight);\n\n    this.spotLight = new THREE.PointLight(this.fontColor, this.spotIntensity);\n    this.spotLight.position.set(-80, 100, 10);\n    this.spotLight.castShadow = true;\n    this.scene.add(this.spotLight);\n\n    const sphere = new THREE.SphereBufferGeometry(0.1, 16, 8);\n\n    this.light1 = new THREE.PointLight(0xffffff, 0.1, 50);\n    this.light1.add(\n      new THREE.Mesh(\n        sphere,\n        new THREE.MeshBasicMaterial({ color: this.fontColor })\n      )\n    );\n    this.scene.add(this.light1);\n\n    this.light2 = new THREE.PointLight(lightLight1, 0.1, 50);\n    this.light2.add(\n      new THREE.Mesh(\n        sphere,\n        new THREE.MeshBasicMaterial({ color: this.fontColor })\n      )\n    );\n    this.scene.add(this.light2);\n\n    this.light3 = new THREE.PointLight(lightLight2, 0.1, 50);\n    this.light3.add(\n      new THREE.Mesh(\n        sphere,\n        new THREE.MeshBasicMaterial({ color: this.fontColor })\n      )\n    );\n    this.scene.add(this.light3);\n\n    this.light4 = new THREE.PointLight(this.focusColor, 0.1, 50);\n    this.light4.add(\n      new THREE.Mesh(\n        sphere,\n        new THREE.MeshBasicMaterial({ color: this.fontColor })\n      )\n    );\n    this.scene.add(this.light4);\n\n    this.light5 = new THREE.PointLight(this.fontColor, 0.1, 50);\n    this.light5.add(\n      new THREE.Mesh(\n        sphere,\n        new THREE.MeshBasicMaterial({ color: this.fontColor })\n      )\n    );\n    this.scene.add(this.light5);\n\n    // adds the avatar to the scene\n    this.addModel();\n\n    this.camera.position.z = 0.5;\n    this.camera.position.y = 0;\n\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.controls.update();\n\n    this.renderer.setSize(width, height);\n\n    window.addEventListener(\"resize\", this.onWindowResize, false);\n\n    this.mount.appendChild(this.renderer.domElement);\n\n    this.start();\n  }\n\n  componentDidUpdate(prevProps) {\n    // start/stop/pause the animation\n    if (prevProps.animationStatus !== this.props.animationStatus) {\n      this.setState({\n        animationStatus: this.props.animationStatus,\n      });\n    }\n    // receive the new list of visemes\n    if (prevProps.visemes !== this.props.visemes) {\n      this.visemes = this.props.visemes;\n      this.visemesNames = [...new Set(this.props.visemes)];\n      this.currentFrame = 1;\n      console.log(this.visemes);\n      console.log(this.visemesNames);\n    }\n    // update the intensity of the articulation\n    if (prevProps.sliderValue !== this.props.sliderValue) {\n      this.setState({\n        intensity: this.props.sliderValue,\n      });\n    }\n    // change the theme\n    if (prevProps.theme !== this.props.theme) {\n      this.setState(\n        {\n          theme: this.props.theme,\n        },\n        () => {\n          console.log(this.state.theme);\n          if (this.state.theme === \"dark\") {\n            this.bgColor = darkBg;\n            this.fontColor = darkFont;\n            this.focusColor = darkFocus;\n            this.hemiIntensity = this.dhi;\n            this.spotIntensity = this.dsi;\n            this.spotLight.position.set(-80, 100, 10);\n          } else {\n            this.bgColor = lightBg;\n            this.fontColor = lightFont;\n            this.focusColor = lightFocus;\n            this.hemiIntensity = this.lhi;\n            this.spotIntensity = this.lsi;\n            this.spotLight.position.set(-80, 100, 100);\n          }\n          this.hemiLight.color = new THREE.Color(this.bgColor);\n          this.hemiLight.groundColor = new THREE.Color(this.focusColor);\n          this.hemiLight.intensity = this.hemiIntensity;\n\n          this.spotLight.color = new THREE.Color(this.fontColor);\n          this.spotLight.intensity = this.spotIntensity;\n\n          this.light1.children[0].material.color = new THREE.Color(\n            this.fontColor\n          );\n\n          this.light2.children[0].material.color = new THREE.Color(\n            this.fontColor\n          );\n\n          this.light3.children[0].material.color = new THREE.Color(\n            this.fontColor\n          );\n\n          this.light4.children[0].material.color = new THREE.Color(\n            this.fontColor\n          );\n          this.light4.color = new THREE.Color(this.focusColor);\n\n          this.light5.children[0].material.color = new THREE.Color(\n            this.fontColor\n          );\n          this.light5.color = new THREE.Color(this.fontColor);\n\n          this.model.traverse((o) => {\n            if (\n              o.isMesh &&\n              (o.name === \"head\" || o.name === \"eye4\" || o.name === \"eye4001\")\n            ) {\n              if (this.state.theme === \"dark\") {\n                o.material.emissive = new THREE.Color(this.bgColor);\n                o.material.shininess = 150;\n              } else {\n                o.material.emissive = new THREE.Color(\"#000000\");\n                o.material.shininess = 70;\n              }\n            }\n          });\n        }\n      );\n    }\n  }\n\n  addCube(x, y, z) {\n    // test function for the graphics library\n    var geometry = new THREE.BoxGeometry(0.1, 0.1, 0.1);\n    geometry.translate(x, y, z);\n    var material = new THREE.MeshBasicMaterial({ color: \"#433F81\" });\n    var cube = new THREE.Mesh(geometry, material);\n    this.scene.add(cube);\n  }\n\n  addModel() {\n    // loads the model to the page\n    var loader = new GLTFLoader();\n\n    loader.load(\n      \"model/head_new_visemes_2.gltf\",\n      (gltf) => {\n        // clones the model\n        this.model = SkeletonUtils.clone(gltf.scene);\n        console.log(this.model);\n        this.scene.add(this.model);\n        this.getModelControl();\n        this.model.traverse((o) => {\n          // adds the material and color to the model\n          if (\n            o.isMesh &&\n            (o.name === \"head\" || o.name === \"eye4\" || o.name === \"eye4001\")\n          ) {\n            var newMaterial;\n            if (this.state.theme === \"dark\") {\n              newMaterial = new THREE.MeshPhongMaterial({\n                color: 0xffffff,\n                specular: 0x111111,\n                shininess: 150,\n              });\n              newMaterial.emissive = new THREE.Color(this.bgColor);\n            } else {\n              newMaterial = new THREE.MeshPhongMaterial({\n                color: 0xffffff,\n                specular: 0x111111,\n                shininess: 50,\n              });\n            }\n            newMaterial.needsUpdate = true;\n            newMaterial.skinning = o.material.skinning;\n            newMaterial.morphTargets = o.material.morphTargets;\n            newMaterial.morphNormals = o.material.morphNormals;\n            o.material = newMaterial;\n          }\n        });\n        this.renderScene();\n        this.props.mounted();\n        // create logger for controllers values tracking\n        this.logger = {};\n        this.logger[\"phones\"] = [];\n        for (var visemeName of Object.keys(this.modelControlDict)) {\n          if (visemeName !== \"wink\") {\n            this.logger[visemeName] = [];\n          }\n        }\n        console.log(this.model);\n      },\n      undefined,\n      function (error) {\n        console.error(error);\n      }\n    );\n  }\n\n  onWindowResize() {\n    this.camera.aspect = window.innerWidth / window.innerHeight;\n    this.camera.updateProjectionMatrix();\n\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n\n  componentWillUnmount() {\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  start() {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate);\n    }\n  }\n\n  getModelControl() {\n    // gets the controllers of the shape keys of the model\n    if (this.model) {\n      this.model.traverse((o) => {\n        if (o.isMesh && o.name === \"head\") {\n          this.modelControl = o.morphTargetInfluences;\n          this.modelControlDict = o.morphTargetDictionary;\n          this.modelControlActive = true;\n        }\n      });\n    }\n  }\n\n  calculateDistance(point1, point2) {\n    return Math.sqrt(\n      Math.pow(point1[0] - point2[0], 2) + Math.pow(point1[1] - point2[1], 2)\n    );\n  }\n\n  moveLid() {\n    // animates the blinking\n    if (this.modelControl) {\n      if (this.modelControl[this.modelControlDict[\"wink\"]] <= 0) {\n        if (this.lidWait > 400) {\n          this.lidMove = this.lidSpeed;\n          this.lidWait = 0;\n        } else {\n          this.lidMove = 0;\n        }\n        this.lidWait += 1;\n      } else if (this.modelControl[this.modelControlDict[\"wink\"]] > 1) {\n        this.lidMove = -this.lidMove;\n      }\n      this.modelControl[this.modelControlDict[\"wink\"]] += this.lidMove;\n    }\n  }\n\n  moveLights() {\n    // animates the moving lights\n    const time = Date.now() * 0.0005;\n\n    this.light1.position.x = Math.sin(time * 0.7) * 10;\n    this.light1.position.y = Math.cos(time * 0.5) * 20;\n    this.light1.position.z = Math.cos(time * 0.3) * 10;\n\n    this.light2.position.x = Math.cos(time * 0.3) * 10;\n    this.light2.position.y = Math.sin(time * 0.5) * 20;\n    this.light2.position.z = Math.sin(time * 0.7) * 10;\n\n    this.light3.position.x = Math.sin(time * 0.7) * 10;\n    this.light3.position.y = Math.cos(time * 0.3) * 20;\n    this.light3.position.z = Math.sin(time * 0.5) * 10;\n\n    this.light4.position.x = Math.cos(time * 0.3) * 10;\n    this.light4.position.y = Math.cos(time * 0.7) * 20;\n    this.light4.position.z = Math.sin(time * 0.5) * 10;\n\n    this.light5.position.x = Math.cos(time * 0.3) * 10;\n    this.light5.position.y = Math.sin(time * 0.7) * 20;\n    this.light5.position.z = Math.cos(time * 0.5) * 10;\n  }\n\n  nextViseme() {\n    // takes the next viseme from the list and changes the controllers\n    // decrease added value\n    if (\n      this.currentFrame > 0 &&\n      this.visemes[this.currentFrame] === this.visemes[this.currentFrame - 1]\n    ) {\n      this.exponent -= 0.1;\n    } else this.exponent = 10;\n    // decrease all visemes\n    for (var visemeName of Object.keys(this.modelControlDict)) {\n      if (visemeName !== \"wink\") {\n        this.modelControl[this.modelControlDict[visemeName]] -=\n          this.state.intensity / this.dec;\n        if (this.modelControl[this.modelControlDict[visemeName]] < 0)\n          this.modelControl[this.modelControlDict[visemeName]] = 0;\n      }\n    }\n    // increase the current visemes\n    var mapping = visemeMap[this.visemes[this.currentFrame]];\n    for (var currentVisemeName of Object.keys(mapping)) {\n      // calculate the added value\n      var inc = Math.pow(this.state.intensity, this.exponent);\n      // check if the visime is relative\n      if (mapping[currentVisemeName] > 1) inc /= 4;\n      // add the value\n      this.modelControl[this.modelControlDict[currentVisemeName]] +=\n        this.state.intensity / this.dec;\n      this.modelControl[this.modelControlDict[currentVisemeName]] += inc;\n      // check constraints\n      if (\n        this.modelControl[this.modelControlDict[currentVisemeName]] > 1 &&\n        mapping[currentVisemeName] > 1\n      )\n        this.modelControl[this.modelControlDict[currentVisemeName]] = 1;\n      if (\n        this.modelControl[this.modelControlDict[currentVisemeName]] >\n          mapping[currentVisemeName] * this.state.intensity &&\n        !(mapping[currentVisemeName] > 1)\n      )\n        this.modelControl[this.modelControlDict[currentVisemeName]] =\n          mapping[currentVisemeName] * this.state.intensity;\n    }\n    // log the values in the shape key logger\n    for (var visemeName of Object.keys(this.modelControlDict)) {\n      if (visemeName !== \"wink\") {\n        this.logger[visemeName].push(\n          this.modelControl[this.modelControlDict[visemeName]]\n        );\n      }\n    }\n    this.logger[\"phones\"].push(this.visemes[this.currentFrame]);\n  }\n\n  resetModel() {\n    if (this.modelControl) {\n      for (var i = 0; i < this.modelControl.length; i++) {\n        if (this.modelControlDict[\"wink\"] !== i) this.modelControl[i] = 0;\n      }\n    }\n  }\n\n  async animate() {\n    // main animation loop\n    if (this.state.animationStatus === \"PLAY\" && this.modelControlActive) {\n      // get the next frame/viseme\n      this.nextViseme();\n      this.currentFrame += 1;\n      this.props.setProgress(this.currentFrame / this.visemes.length);\n      if (this.currentFrame >= this.visemes.length) {\n        // end of animation\n        this.currentFrame = 0;\n        this.resetModel();\n        this.props.setProgress(0);\n      }\n      if (this.props.audio.ended) {\n        // end of audio\n        this.props.stopAnimation();\n        // display the logged values\n        if (this.logger) {\n          var json = JSON.stringify(this.logger);\n          // console.log(json)\n        }\n      }\n    } else if (this.state.animationStatus === \"STOP\") {\n      // animation is not playing\n      this.currentFrame = 0;\n      this.resetModel();\n      this.props.setProgress(0);\n    }\n\n    this.moveLid();\n    this.moveLights();\n    this.controls.update();\n    this.renderScene();\n    this.frameId = window.requestAnimationFrame(this.animate);\n  }\n\n  renderScene() {\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  render() {\n    return (\n      <div\n        ref={(mount) => {\n          this.mount = mount;\n        }}\n      />\n    );\n  }\n}\n\nexport default Model;\n"]},"metadata":{},"sourceType":"module"}